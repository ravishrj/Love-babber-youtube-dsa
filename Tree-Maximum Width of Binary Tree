662. Maximum Width of Binary Tree
Medium

3879

620

Add to List

Share
Given the root of a binary tree, return the maximum width of the given tree.

The maximum width of a tree is the maximum width among all levels.

The width of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes are also counted into the length calculation.

It is guaranteed that the answer will in the range of 32-bit signed integer.

 

Example 1:


Input: root = [1,3,2,5,3,null,9]
Output: 4
Explanation: The maximum width existing in the third level with the length 4 (5,3,null,9).
Example 2:


Input: root = [1,3,null,5,3]
Output: 2
Explanation: The maximum width existing in the third level with the length 2 (5,3).
Example 3:


Input: root = [1,3,2,5]
Output: 2
Explanation: The maximum width existing in the second level with the length 2 (3,2).


=================================================================================================================================================

public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,int> >q;
        q.push(make_pair(root,1));
        int ans=0;
        while(!q.empty() && root)
        {
              int n=q.size();       
            int start = q.front().second;
            int end = q.back().second;
            ans=max(ans,(end-start)+1);
            while(n--)
            {
              pair<TreeNode*,int> temp =q.front();
                q.pop();
                
                int idx=temp.second-start;
                if(temp.first->left != NULL)
                    q.push({temp.first->left, (long long)2 * idx });
                
                
                if(temp.first->right != NULL)
                    q.push({temp.first->right, (long long) 2 * idx +1});
            }
        }
        return ans;
        
        
    }
};
