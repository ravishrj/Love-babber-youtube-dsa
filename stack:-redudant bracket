Redundant Brackets
Difficulty: EASY
Contributed By
Dhruv Sharma
|
Level 1
Avg. time to solve
15 min
Success Rate
85%
Problem Statement
Sample Input 1 :
2
(a+b)
(a+c*b)+(c))
Sample Output 1 :
No
Yes
Explanation Of Sample Input 1 :
In the first test case, there are no redundant brackets. Hence, the output is “No”. 


In the second test case, the brackets around the alphabet ‘c’( index 8 and index 10) are redundant. Hence the output is “Yes”.
Sample Input 2 :
2
(a*b+(c/d))
((a/b))
Sample Output 2 :
No
Yes
Explanation Of Sample Input 2 :
In the first test case, there are no redundant brackets. Hence, the output is “No”. 


In the second test case, the brackets around the subexpression “(a+b)” ( index 0 and index 6) are redundant. Hence the output is “Yes”.




===========================================================================================================================================================================

#include<bits/stdc++.h>
bool findRedundantBrackets(string &s)
{
    stack<char> st;
    for(int i=0;i<s.size();i++)
    {
        if(s[i]==')'&&!st.empty())
        {
            int chk=0;
            char c;
           while(!st.empty())
           {
               c=st.top();
               st.pop();
               
               if(c == '+' ||c == '-' || c == '*' || c == '/') {
                        chk =1;
                    }
               if(c=='(')
                   break;
           }
            if((chk==0)||c!='(')
                return true;
        }
        else
          st.push(s[i]);
    }
//     if(!st.empty())
//         return true;
//     else
        return false;
}

