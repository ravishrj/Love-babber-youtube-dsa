35. Search Insert Position
Easy

8617

438

Add to List

Share
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:

Input: nums = [1,3,5,6], target = 2
Output: 1
Example 3:

Input: nums = [1,3,5,6], target = 7
Output: 4
 

Constraints:

1 <= nums.length <= 104
-104 <= nums[i] <= 104
nums contains distinct values sorted in ascending order.
-104 <= target <= 104
Accepted
1,563,803
Submissions
3,703,479
Seen this question in a real interview before?

Yes

No

Problems

Pick One
===============================================================================================================================================================================

class Solution {
public:
    int searchInsert(vector<int>& arr, int target) {
        int s=0;
        int e=arr.size()-1;
        int mid=s+(e-s)/2;
        while(s<=e)
        {
            if(arr[mid]==target)
                return mid;
            if(arr[mid]>target)
                e=mid-1;
           else if(arr[mid]<target)
                s=mid+1;
            mid=s+(e-s)/2; 
        }
        //both return value are true;
        //return s;
         return mid;
    }
};
